k1 <- x %>% filter(between(value, 60*(prag1-100), 60*(prag1+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(prag2-100), 60*(prag2+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
val <- ((coefs[1])*sum(x$value[1:k1]) +
(coefs[2])*sum(x$value[(k1+1):k2] - prag1*60) +
(coefs[3])*sum(x$value[(k2+1):100] - prag2*60))/(0.1*sum(x$value))
c(val, as.integer(100-k1), as.integer(100-k2))
}
expand_grid("cota_1"=seq(0, 0.5, by=0.01),
"cota_2"=seq(0, 0.5, by=0.01),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = map_dbl(coefs,
~raport_wid(.x, prag1=400, prag2=2200)[1])) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
raport_wid(coefs = c(0.1, 0.16, 0.21), prag1=400, prag2=2200)
raport_wid(coefs = c(0.16, 0.16, 0.21), prag1=400, prag2=2200)
raport_wid <- function(coefs, prag1, prag2){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(prag1-100), 60*(prag1+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(prag2-100), 60*(prag2+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
val <- ((coefs[1])*sum(x$value[1:k1]) +
(coefs[2])*sum(x$value[(k1+1):k2] - prag1*60) +
(coefs[3])*sum(x$value[(k2+1):100] - prag2*60))/(0.1*sum(x$value))
c(val, as.integer(100-k1), as.integer(100-k2))
}
expand_grid("cota_1"=seq(0, 0.5, by=0.01),
"cota_2"=seq(0, 0.5, by=0.01),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = map_dbl(coefs,
~raport_wid(.x, prag1=400, prag2=2200)[1])) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
raport_wid(coefs = c(0.16, 0.16, 0.21), prag1=400, prag2=2200)
raport_wid(coefs = c(0.16, 0.16, 0.21), prag1=400, prag2=2200)
raport_wid(coefs = c(0.10, 0.10, 0.19), prag1=400, prag2=2200)
r_wid <- function(valori, coefs, praguri){
if(valori < praguri[1]){
imp <- coefs[1]*valori
message("eşti în cota 1")
} else if(valori > praguri[1] & valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*praguri[1] + coefs[2]*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*praguri[1] + coefs[2]*(praguri[2]-praguri[1]) +
coefs[3]*(valori-praguri[2])
}
return(imp)
}
x
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*valori
message("eşti în cota 1")
} else if(valori > praguri[1] & valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*praguri[1] + coefs[2]*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*praguri[1] + coefs[2]*(praguri[2]-praguri[1]) +
coefs[3]*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
raport_wid(valori = distrib_wid$value[1], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
raport_wid(valori = distrib_wid$value[1], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
distrib_wid
raport_wid(valori = distrib_wid$value[100], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
raport_wid(valori = distrib_wid$value[99:100], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
raport_wid <- Vectorize(raport_wid, SIMPLIFY = TRUE)
raport_wid(valori = distrib_wid$value[99:100], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
raport_wid <- Vectorize(raport_wid, SIMPLIFY = TRUE)
raport_wid(valori = distrib_wid$value[99:100], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
raport_wid(valori = distrib_wid$value[100], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*valori
message("eşti în cota 1")
} else if(valori > praguri[1] & valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*praguri[1] + coefs[2]*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*praguri[1] + coefs[2]*(praguri[2]-praguri[1]) +
coefs[3]*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
raport_wid(valori = distrib_wid$value[99], coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))
}
sum(imp_total)
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))[1]
}
sum(imp_total)
sum(imp_total)*12
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*60*valori
message("eşti în cota 1")
} else if(valori > praguri[1] & valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*60*praguri[1] + coefs[2]*60*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*60*praguri[1] + coefs[2]*60*(praguri[2]-praguri[1]) +
coefs[3]*00*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))[1]
}
sum(imp_total)
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*60*valori
message("eşti în cota 1")
} else if(valori > praguri[1] & valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*60*praguri[1] + coefs[2]*60*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*60*praguri[1] + coefs[2]*60*(praguri[2]-praguri[1]) +
coefs[3]*00*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))[1]
}
sum(imp_total)
imp_total
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*60*valori
message("eşti în cota 1")
} else if(valori > praguri[1] & valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*60*praguri[1] + coefs[2]*60*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*60*praguri[1] + coefs[2]*60*(praguri[2]-praguri[1]) +
coefs[3]*60*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))[1]
}
sum(imp_total)
sum(imp_total)*5700000/100
distrib_wid %>% mutate(tax = imp_total)
distrib_wid %>% mutate(tax = imp_total) %>% tail()
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*valori
message("eşti în cota 1")
} else if(valori > praguri[1] && valori < praguri[2]){
message("eşti în cota 2")
imp <- coefs[1]*praguri[1] + coefs[2]*(valori-praguri[1])
} else if(valori > praguri[2]){
message("eşti în cota 3")
imp <- coefs[1]*praguri[1] + coefs[2]*(praguri[2]-praguri[1]) +
coefs[3]*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(400, 2200))[1]
}
sum(imp_total)
distrib_wid %>% mutate(tax = imp_total) %>% tail()
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value)
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(2000*12, 2200*5*12))[1]
}
sum(imp_total)
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value)
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value) %>% slice(20:30)
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value) %>% slice(30:10)
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value) %>% ggplot(aes(x=percentile, y=rate)) + geom_line()
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value) %>% ggplot(aes(x=percentile, y=rate)) + geom_line() + coord_flip()
distrib_wid %>% mutate(tax = imp_total) %>% mutate(rate = 100*tax/value) %>% ggplot(aes(x=percentile, y=rate)) + geom_col() + coord_flip()
sum(imp_total)
sum(imp_total)*57000
sum(imp_total)*5700000/100
5508-2800
insumare <- function(coefs, praguri){
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(2000*12, 2200*5*12))[1]
}
sum(imp_total)*57000/1000000000
}
insumare(coefs=c(0.1, 0.16, 0.21), praguri=c(2000*12, 2200*60))
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.01),
"cota_2"=seq(0, 0.5, by=0.01),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = map_dbl(coefs,
~insumare(.x, prag1=2000*12, prag2=2200*60)))
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.01),
"cota_2"=seq(0, 0.5, by=0.01),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = map_dbl(coefs,
~insumare(.x, praguri=c(400*60, 2200*60))))
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.01),
"cota_2"=seq(0, 0.5, by=0.01),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c))
multiplicator
library(furrr)
plan("multisession")
raport_wid <- function(valori, coefs, praguri){
x <- distrib_wid %>% mutate(categ = row_number())
k1 <- x %>% filter(between(value, 60*(praguri[1]-100), 60*(praguri[1]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
k2 <- x %>% filter(between(value, 60*(praguri[2]-100), 60*(praguri[2]+100))) %>%
pull(categ) %>% .[1] %>% as.integer()
if(valori < praguri[1]){
imp <- coefs[1]*valori
} else if(valori > praguri[1] && valori < praguri[2]){
imp <- coefs[1]*praguri[1] + coefs[2]*(valori-praguri[1])
} else if(valori > praguri[2]){
imp <- coefs[1]*praguri[1] + coefs[2]*(praguri[2]-praguri[1]) +
coefs[3]*(valori-praguri[2])
}
return(c(imp, as.integer(100-k1), as.integer(100-k2)))
}
insumare <- function(coefs, praguri){
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=c(0.1, 0.16, 0.21), praguri=c(2000*12, 2200*5*12))[1]
}
message("Gata")
sum(imp_total)*57000/1000000000
}
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.02),
"cota_2"=seq(0, 0.5, by=0.02),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, prag1=2000*12, prag2=2200*60))) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.02),
"cota_2"=seq(0, 0.5, by=0.02),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60)))) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
plotly::ggplotly(multiplicator)
multiplicator
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.02),
"cota_2"=seq(0, 0.5, by=0.02),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28)) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
plotly::ggplotly(multiplicator)
multiplicator
multiplicator <- expand_grid("cota_1"=seq(0, 0.5, by=0.02),
"cota_2"=seq(0, 0.5, by=0.02),
"cota_3"=0.1) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28))
multiplicator <- expand_grid("cota_1"=0.1,
"cota_2"=seq(0, 0.5, by=0.02),
"cota_3"=seq(0, 0.5, by=0.02)) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28))
multiplicator
multiplicator %>% pull(ratio)
multiplicator %>% pull(ratio) %>% unique()
multiplicator
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c))
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>% pull(coefs)
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c))
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%unnest_wider(coefs)
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = map2(cota_1, cota_2, cota_3, c)) %>%unnest(coefs)
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%unnest(coefs)
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%unnest_wider(coefs)
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%unnest(coefs)
expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c))
multiplicator <- expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28)) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
plotly::ggplotly(multiplicator)
multiplicator
multiplicator <- expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28))
multiplicator
multiplicator %>% .[1,]
multiplicator %>% .[1,4]
multiplicator %>% .[1,4,drop=T]
multiplicator %>% .[2,4,drop=T]
multiplicator %>% .[3,4,drop=T]
multiplicator %>% .[5,4,drop=T]
insumare(coefs=c(0.1, 0.10, 0.14, praguri=c(2000*12, 2200*60)))
insumare(coefs=c(0.1, 0.10, 0.1, praguri=c(2000*12, 2200*60)))
insumare <- function(coefs, praguri){
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=coefs, praguri=praguri)[1]
}
message("Gata")
sum(imp_total)*57000/1000000000
}
multiplicator <- expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28)) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_1, y=cota_2, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
plotly::ggplotly(multiplicator)
multiplicator
multiplicator <- expand_grid("cota_1"=0.1,
"cota_2"=seq(0.1, 0.5, by=0.02),
"cota_3"=seq(0.1, 0.5, by=0.02)) %>%
mutate(coefs = pmap(list(cota_1, cota_2, cota_3), c)) %>%
mutate(ratio = future_map_dbl(coefs,
~insumare(.x, praguri=c(2000*12, 2200*60))/28)) %>%
mutate(ratio2 = cut(ratio, breaks=c(-0.01, 1, 2, 3, 4, 5, 10))) %>%
ggplot(aes(x=cota_2, y=cota_3, fill=ratio2,
text=paste("Raport:", round(ratio, 3)))) + geom_tile() +
scale_fill_viridis_d(option="E") +
scale_x_continuous(labels=scales::percent_format()) +
scale_y_continuous(labels=scales::percent_format()) +
labs(title = "Factorul multiplicativ al încasărilor",
x="Prima cotă", y="A doua cotă", fill="Factor")
plotly::ggplotly(multiplicator)
multiplicator
insumare(coefs=c(0.1, 0.16, 0.21), praguri=c(2000*12, 2200*60))
insumare(coefs=c(0.1, 0.10, 0.19), praguri=c(2000*12, 2200*60))
43-28
insumare(coefs=c(0.1, 0.10, 0.16), praguri=c(2000*12, 2200*60))
insumare(coefs=c(0.1, 0.10, 0.16), praguri=c(2000*12, 2200*60))
insumare(coefs=c(0.1, 0.10, 0.19), praguri=c(2000*12, 2200*60))
insumare(coefs=c(0.05, 0.10, 0.19), praguri=c(2000*12, 2200*60))
insumare(coefs=c(0.1, 0.10, 0.19), praguri=c(2000*12, 2200*60))
distrib_wid
insumare(coefs=c(0.1, 0.10, 0.19), praguri=c(30000, 2200*60))
insumare(coefs=c(0.1, 0.10, 0.19), praguri=c(40000, 2200*60))
insumare(coefs=c(0.1, 0.10, 0.19), praguri=c(40000, 2200*60))
insumare(coefs=c(0.05, 0.10, 0.19), praguri=c(40000, 2200*60))
insumare(coefs=c(0.05, 0.10, 0.19), praguri=c(30000, 2200*60))
insumare <- function(coefs, praguri){
imp_total <- numeric(100)
for(i in 1:100){
imp_total[i] <- raport_wid(valori = distrib_wid$value[i],
coefs=coefs, praguri=praguri)[1]
}
message("Gata")
sum(imp_total)*47000/1000000000
}
insumare(coefs=c(0.05, 0.10, 0.19), praguri=c(30000, 2200*60))
insumare(coefs=c(0, 0.10, 0.19), praguri=c(30000, 2200*60))
distrib_wid
5300
insumare(coefs=c(0.0, 0.1, 0.16), praguri=c(5300, 2200*60))
insumare(coefs=c(0.1, 0.1, 0.16), praguri=c(5300, 2200*60))
insumare(coefs=c(0.1, 0.1, 0.16), praguri=c(5300, 2200*60)) - 28
insumare(coefs=c(0, 0.1, 0.19), praguri=c(5300, 2200*60))
insumare(coefs=c(0, 0.1, 0.19), praguri=c(5300, 2200*60))  - 28
insumare(coefs=c(0.0, 0.1, 0.16), praguri=c(5300, 2200*60))-28
insumare(coefs=c(0.0, 0.16, 0.21), praguri=c(5300, 2200*60))
insumare(coefs=c(0.0, 0.16, 0.21), praguri=c(5300, 2200*60))-28
insumare(coefs=c(0.0, 0.19, 0.25), praguri=c(5300, 2200*60))
insumare(coefs=c(0.0, 0.19, 0.25), praguri=c(5300, 2200*60))-28
